// automatically generated by the FlatBuffers compiler, do not modify

package speedracer_fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FrameID extends Table {
  public static FrameID getRootAsFrameID(ByteBuffer _bb) { return getRootAsFrameID(_bb, new FrameID()); }
  public static FrameID getRootAsFrameID(ByteBuffer _bb, FrameID obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public FrameID __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }

  public static int createFrameID(FlatBufferBuilder builder,
      int idOffset) {
    builder.startObject(1);
    FrameID.addId(builder, idOffset);
    return FrameID.endFrameID(builder);
  }

  public static void startFrameID(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static int endFrameID(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

