// automatically generated by the FlatBuffers compiler, do not modify

package speedracer_fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ImageFragmentInfo extends Table {
  public static ImageFragmentInfo getRootAsImageFragmentInfo(ByteBuffer _bb) { return getRootAsImageFragmentInfo(_bb, new ImageFragmentInfo()); }
  public static ImageFragmentInfo getRootAsImageFragmentInfo(ByteBuffer _bb, ImageFragmentInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ImageFragmentInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String key() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer keyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public BoundingBox2i bounds() { return bounds(new BoundingBox2i()); }
  public BoundingBox2i bounds(BoundingBox2i obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public boolean isOpaque() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }

  public static void startImageFragmentInfo(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addKey(FlatBufferBuilder builder, int keyOffset) { builder.addOffset(0, keyOffset, 0); }
  public static void addBounds(FlatBufferBuilder builder, int boundsOffset) { builder.addStruct(1, boundsOffset, 0); }
  public static void addIsOpaque(FlatBufferBuilder builder, boolean isOpaque) { builder.addBoolean(2, isOpaque, false); }
  public static int endImageFragmentInfo(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

