// automatically generated by the FlatBuffers compiler, do not modify

package speedracer_fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ImageFragmentList extends Table {
  public static ImageFragmentList getRootAsImageFragmentList(ByteBuffer _bb) { return getRootAsImageFragmentList(_bb, new ImageFragmentList()); }
  public static ImageFragmentList getRootAsImageFragmentList(ByteBuffer _bb, ImageFragmentList obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ImageFragmentList __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FrameID frame() { return frame(new FrameID()); }
  public FrameID frame(FrameID obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ImageFragmentInfo fragments(int j) { return fragments(new ImageFragmentInfo(), j); }
  public ImageFragmentInfo fragments(ImageFragmentInfo obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int fragmentsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public int totalCount() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int accumCount() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createImageFragmentList(FlatBufferBuilder builder,
      int frameOffset,
      int fragmentsOffset,
      int totalCount,
      int accumCount) {
    builder.startObject(4);
    ImageFragmentList.addAccumCount(builder, accumCount);
    ImageFragmentList.addTotalCount(builder, totalCount);
    ImageFragmentList.addFragments(builder, fragmentsOffset);
    ImageFragmentList.addFrame(builder, frameOffset);
    return ImageFragmentList.endImageFragmentList(builder);
  }

  public static void startImageFragmentList(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addFrame(FlatBufferBuilder builder, int frameOffset) { builder.addOffset(0, frameOffset, 0); }
  public static void addFragments(FlatBufferBuilder builder, int fragmentsOffset) { builder.addOffset(1, fragmentsOffset, 0); }
  public static int createFragmentsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startFragmentsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTotalCount(FlatBufferBuilder builder, int totalCount) { builder.addInt(2, totalCount, 0); }
  public static void addAccumCount(FlatBufferBuilder builder, int accumCount) { builder.addInt(3, accumCount, 0); }
  public static int endImageFragmentList(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

