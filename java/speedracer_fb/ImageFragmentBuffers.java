// automatically generated by the FlatBuffers compiler, do not modify

package speedracer_fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ImageFragmentBuffers extends Table {
  public static ImageFragmentBuffers getRootAsImageFragmentBuffers(ByteBuffer _bb) { return getRootAsImageFragmentBuffers(_bb, new ImageFragmentBuffers()); }
  public static ImageFragmentBuffers getRootAsImageFragmentBuffers(ByteBuffer _bb, ImageFragmentBuffers obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ImageFragmentBuffers __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Viewport extents() { return extents(new Viewport()); }
  public Viewport extents(Viewport obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public DataBuffer pixels() { return pixels(new DataBuffer()); }
  public DataBuffer pixels(DataBuffer obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public DataBuffer depth() { return depth(new DataBuffer()); }
  public DataBuffer depth(DataBuffer obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static void startImageFragmentBuffers(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addExtents(FlatBufferBuilder builder, int extentsOffset) { builder.addStruct(0, extentsOffset, 0); }
  public static void addPixels(FlatBufferBuilder builder, int pixelsOffset) { builder.addOffset(1, pixelsOffset, 0); }
  public static void addDepth(FlatBufferBuilder builder, int depthOffset) { builder.addOffset(2, depthOffset, 0); }
  public static int endImageFragmentBuffers(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // extents
    return o;
  }
}

